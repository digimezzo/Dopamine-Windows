<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!--  RegularButton  -->
  <Style x:Key="RegularButton" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="grid">
            <Border
              x:Name="border"
              Grid.Row="0"
              Grid.Column="0"
              Height="24"
              MinWidth="80"
              VerticalAlignment="Center"
              Panel.ZIndex="0"
              Background="{DynamicResource RG_ControlsBackgroundMediumTransparentBrush}"
              BorderThickness="0" />
            <Label
              x:Name="label"
              Padding="10,0,10,0"
              HorizontalContentAlignment="Center"
              VerticalContentAlignment="Center"
              Panel.ZIndex="2"
              Background="Transparent"
              Content="{TemplateBinding Content}"
              Foreground="{DynamicResource RG_ForegroundBrush}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource RG_ControlsBackgroundHighTransparentBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource RG_AccentBrush}" />
              <Setter TargetName="label" Property="Foreground" Value="{DynamicResource RG_WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  RegularButtonAccent  -->
  <!--<Style x:Key="RegularButtonAccent" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid">
                        <Border x:Name="border" Grid.Row="0" Grid.Column="0" MinWidth="80" Height="24" Panel.ZIndex="0" Background="{DynamicResource RG_AccentBrush}" BorderThickness="0" VerticalAlignment="Center"/>
                        <Label x:Name="label" Content="{TemplateBinding Content}" Foreground="{DynamicResource RG_WhiteBrush}" Panel.ZIndex="2" Background="Transparent" Padding="10,0,10,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

  <!--  TransparentButton  -->
  <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Background="#00000000">
            <Label
              Padding="0"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Content="{TemplateBinding Content}"
              Foreground="{TemplateBinding Foreground}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TransparentFixedButton  -->
  <Style x:Key="TransparentFixedButton" TargetType="{x:Type Button}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Background="#00000000">
            <Label
              Padding="0"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Content="{TemplateBinding Content}"
              Foreground="{TemplateBinding Foreground}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TransparentToggleButton  -->
  <Style x:Key="TransparentToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Background="#00000000">
            <Label
              Padding="0"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Content="{TemplateBinding Content}"
              Foreground="{TemplateBinding Foreground}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TextButton  -->
  <Style x:Key="TextButton" TargetType="{x:Type Button}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <TextBlock
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="{TemplateBinding FontSize}"
            Foreground="{TemplateBinding Foreground}"
            Text="{TemplateBinding Content}" />
          <ControlTemplate.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource RG_AccentBrush}"/>
                        </Trigger>-->
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Opacity" Value="0.7" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
