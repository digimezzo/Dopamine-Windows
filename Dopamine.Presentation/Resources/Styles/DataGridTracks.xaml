<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:Dopamine.Presentation.Converters"
  xmlns:pc="clr-namespace:Dopamine.Presentation.Controls"
  xmlns:utils="clr-namespace:Dopamine.Presentation.Utils">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Dopamine.Presentation;component/Resources/Styles/FontStyles.xaml" />
    <ResourceDictionary Source="/Dopamine.Presentation;component/Resources/Styles/ScrollBar.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
  <converters:AddEllipsisConverter x:Key="AddEllipsisConverter" />

  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource RG_WhiteColor}" />

  <!--  ContextMenu  -->
  <ContextMenu x:Key="DataGridTracksContextMenu">
    <ContextMenu.Resources>
      <utils:BindingProxy x:Key="ColumnsProxy" Data="{DynamicResource Language_Columns}" />
      <utils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}" />
      <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
    </ContextMenu.Resources>

    <MenuItem Command="{Binding DataContext.ChooseColumnsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Header="{Binding Source={StaticResource ColumnsProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}" />
    <Separator />
    <MenuItem
      Command="{Binding ViewInExplorerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      Header="{DynamicResource Language_View_In_Explorer}"
      InputGestureText="{DynamicResource Language_Ctrl_E}" />
    <MenuItem
      Command="{Binding JumpToPlayingTrackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      Header="{DynamicResource Language_Jump_To_Playing_Song}"
      InputGestureText="{DynamicResource Language_Ctrl_J}" />
    <Separator />
    <MenuItem Command="{Binding DataContext.EditTracksCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" InputGestureText="">
      <MenuItem.Header>
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{DynamicResource Language_Edit}" />
          <pc:SyncRing
            Width="11"
            Margin="15,0,0,0"
            VerticalAlignment="Center"
            Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
      </MenuItem.Header>
    </MenuItem>
    <Separator />
    <MenuItem
      Command="{Binding DataContext.PlaySelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      Header="{DynamicResource Language_Play_Selected}"
      InputGestureText="" />
    <MenuItem
      Command="{Binding DataContext.PlayNextCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      Header="{DynamicResource Language_Play_Next}"
      InputGestureText="" />
    <MenuItem
      Command="{Binding DataContext.AddTracksToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      Header="{DynamicResource Language_Add_To_Now_Playing}"
      InputGestureText="" />
    <MenuItem DisplayMemberPath="Name" Header="{DynamicResource Language_Add_To_Playlist}">
      <MenuItem.ItemContainerStyle>
        <Style TargetType="MenuItem">
          <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
          <Setter Property="Command" Value="{Binding DataContext.AddTracksToPlaylistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
          <Setter Property="CommandParameter" Value="{Binding Name}" />
        </Style>
      </MenuItem.ItemContainerStyle>
      <MenuItem.ItemsSource>
        <CompositeCollection>
          <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}" />
          <Separator />
          <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}" />
        </CompositeCollection>
      </MenuItem.ItemsSource>
    </MenuItem>
    <Separator />
    <MenuItem
      DisplayMemberPath="Name"
      Header="{DynamicResource Language_Search_Online}"
      IsEnabled="{Binding DataContext.HasContextMenuSearchProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      ItemsSource="{Binding DataContext.ContextMenuSearchProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
      <MenuItem.ItemContainerStyle>
        <Style TargetType="MenuItem">
          <Setter Property="Foreground" Value="{DynamicResource RG_BlackBrush}" />
          <Setter Property="Command" Value="{Binding DataContext.SearchOnlineCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
          <Setter Property="CommandParameter" Value="{Binding Id}" />
        </Style>
      </MenuItem.ItemContainerStyle>
    </MenuItem>
    <Separator />
    <MenuItem Command="{Binding DataContext.RemoveSelectedTracksCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" InputGestureText="{DynamicResource Language_Key_Del}">
      <MenuItem.Header>
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{DynamicResource Language_Remove}" />
          <pc:SyncRing
            Width="11"
            Margin="15,0,0,0"
            VerticalAlignment="Center"
            Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
      </MenuItem.Header>
    </MenuItem>
    <MenuItem>
      <MenuItem.Command>
        <Binding Path="DataContext.RemoveSelectedTracksFromDiskCommand" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" />
      </MenuItem.Command>
      <MenuItem.Visibility>
        <Binding
          Converter="{StaticResource BooleanToCollapsedConverter}"
          Mode="OneWay"
          Path="DataContext.ShowRemoveFromDisk"
          RelativeSource="{RelativeSource FindAncestor,
                                          AncestorType={x:Type UserControl}}"
          UpdateSourceTrigger="PropertyChanged" />
      </MenuItem.Visibility>
      <MenuItem.Header>
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{DynamicResource Language_Remove_From_Disk}" />
          <pc:SyncRing
            Width="11"
            Margin="15,0,0,0"
            VerticalAlignment="Center"
            Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
      </MenuItem.Header>
    </MenuItem>
    <Separator />
    <MenuItem
      Command="{Binding DataContext.ShowSelectedTrackInformationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
      Header="{DynamicResource Language_Information}"
      InputGestureText="" />
  </ContextMenu>

  <!--  DataGrid  -->
  <Style TargetType="{x:Type pc:DataGridEx}">
    <Setter Property="Padding" Value="10,0,10,0" />
    <Setter Property="Margin" Value="5,0,5,0" />
    <Setter Property="RowBackground" Value="Transparent" />
    <Setter Property="AlternatingRowBackground" Value="{DynamicResource RG_ControlsBackgroundLowBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HeadersVisibility" Value="Column" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="CanUserReorderColumns" Value="False" />
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="FontSize" Value="13" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
    <!--<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource RG_BorderBrush}"/>-->
    <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type pc:DataGridEx}">
          <ScrollViewer
            Padding="{TemplateBinding Padding}"
            Focusable="false"
            Template="{StaticResource DataGridScrollViewerTemplate}">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  DataGridRow  -->
  <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
    <Setter Property="ContextMenu" Value="{StaticResource DataGridTracksContextMenu}" />
    <Setter Property="Height" Value="24" />
    <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsPlaying}" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource RG_AccentBrush}" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background" Value="{DynamicResource RG_ControlsBackgroundMediumTransparentBrush}" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource RG_AccentBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource RG_WhiteBrush}" />
      </Trigger>
      <Trigger Property="IsSelected" Value="False" />
    </Style.Triggers>
  </Style>

  <!--  DataGridCell  -->
  <Style TargetType="{x:Type DataGridCell}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Margin="10,2,10,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DataGridCellWithEllipsis" TargetType="{x:Type DataGridCell}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Name="DataGridCellBorder">
            <ContentControl Content="{TemplateBinding Content}">
              <ContentControl.ContentTemplate>
                <DataTemplate>
                  <Border HorizontalAlignment="Stretch" Background="#00000000">
                    <TextBlock
                      Width="auto"
                      Height="auto"
                      Margin="10,2,10,2"
                      Background="Transparent"
                      Text="{Binding Text}"
                      TextTrimming="CharacterEllipsis"
                      ToolTip="{Binding Text}" />
                  </Border>
                </DataTemplate>
              </ContentControl.ContentTemplate>
            </ContentControl>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  DataGridColumnHeader  -->
  <Style TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
    <Setter Property="FontSize" Value="18" />
    <Setter Property="Margin" Value="20,0,0,15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <StackPanel Orientation="Horizontal">
            <ContentPresenter />
            <Grid Margin="5,5,0,0">
              <TextBlock
                x:Name="ArrowUp"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="12"
                Foreground="{TemplateBinding Foreground}"
                Style="{StaticResource SegoeAssets}"
                Text="&#xE010;"
                Visibility="Hidden" />
              <TextBlock
                x:Name="ArrowDown"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="12"
                Foreground="{TemplateBinding Foreground}"
                Style="{StaticResource SegoeAssets}"
                Text="&#xE011;"
                Visibility="Hidden" />
            </Grid>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
              <Setter Property="Foreground" Value="{DynamicResource RG_ForegroundBrush}" />
              <Setter TargetName="ArrowUp" Property="Visibility" Value="Hidden" />
              <Setter TargetName="ArrowDown" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Ascending">
              <Setter Property="Foreground" Value="{DynamicResource RG_AccentBrush}" />
              <Setter TargetName="ArrowUp" Property="Visibility" Value="Visible" />
              <Setter TargetName="ArrowDown" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter Property="Foreground" Value="{DynamicResource RG_AccentBrush}" />
              <Setter TargetName="ArrowUp" Property="Visibility" Value="Hidden" />
              <Setter TargetName="ArrowDown" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
