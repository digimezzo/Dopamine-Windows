<baseviews:TracksViewBase x:Class="Dopamine.CollectionModule.Views.CollectionGenres"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dopamine.CollectionModule.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
             xmlns:commonprism="clr-namespace:Dopamine.Common.Prism;assembly=Dopamine.Common"
             xmlns:dc="clr-namespace:Digimezzo.WPFControls;assembly=Digimezzo.WPFControls"
             xmlns:controls="clr-namespace:Dopamine.Common.Controls;assembly=Dopamine.Common"
             xmlns:baseviews="clr-namespace:Dopamine.Common.Presentation.Views.Base;assembly=Dopamine.Common"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:corebase="clr-namespace:Dopamine.Common.Base;assembly=Dopamine.Common"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             prismMvvm:ViewModelLocator.AutoWireViewModel="True">

   <i:Interaction.Triggers>
      <i:EventTrigger EventName="Loaded">
         <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
      </i:EventTrigger>
   </i:Interaction.Triggers>

   <baseviews:TracksViewBase.Resources>
      <Storyboard x:Key="ShowSemanticZoom">
         <Storyboard>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="0" To="1" Duration="0:0:0.25" />
            <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" From="-50" To="0" Duration="0:0:0.15" />
         </Storyboard>
      </Storyboard>
      <Storyboard x:Key="HideSemanticZoom">
         <Storyboard>
            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="1" To="0" Duration="0:0:0" />
            <ThicknessAnimation Storyboard.TargetProperty="Margin" BeginTime="0:0:0" From="0" To="-50" Duration="0:0:0" />
         </Storyboard>
      </Storyboard>
   </baseviews:TracksViewBase.Resources>

   <dc:MultiPanePanel 
        BorderBrush="{DynamicResource RG_BorderBrush}" 
        SeparatorMarginTop="45" 
        ContentResizeDelay="25" 
        LeftPaneWidthPercent="{Binding LeftPaneWidthPercent, Mode=TwoWay}" 
        RightPaneWidthPercent="{Binding RightPaneWidthPercent, Mode=TwoWay}"
        LeftPaneMinimumWidth="230"
        MiddlePaneMinimumWidth="250"
        RightPaneMinimumWidth="250">
      <dc:MultiPanePanel.LeftPaneContent>
         <DockPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5,0,0,15">
               <Button x:Name="ShuffleAllButton" Margin="10,6,0,0" FontSize="{x:Static corebase:Constants.GlobalFontSize}" Style="{StaticResource TransparentButton}" VerticalContentAlignment="Center" ToolTip="{DynamicResource Language_Shuffle_All}" Command="{Binding DataContext.ShuffleAllCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                  <TextBlock Text="&#xE8B1;" Style="{StaticResource SegoeAssets}" Foreground="{DynamicResource RG_ForegroundBrush}" FontSize="16"/>
               </Button>
               <Button x:Name="GenresButton" Margin="10,0,0,0" ToolTip="{DynamicResource Language_All_Genres}" Style="{StaticResource TransparentButton}" Click="GenresButton_Click">
                  <dc:LabelToLower Content="{DynamicResource Language_Genres}" 
                                                 Foreground="{DynamicResource RG_ForegroundBrush}"
                                                 FontWeight="Light"
                                                 FontSize="20"
                                                 Padding="0"/>
               </Button>
               <Label Content="{Binding GenresCount}" Style="{StaticResource CountLabel}"/>
               <Button Content="{Binding GenreOrderText,Converter={StaticResource StringToLowerConverter}}" 
                                Style="{StaticResource TransparentButton}"
                                FontWeight="Light" 
                                FontSize="20" 
                                Margin="10,0,0,0"
                                Foreground="{DynamicResource RG_InactiveForegroundBrush}"
                                Command="{Binding ToggleGenreOrderCommand}"/>
            </StackPanel>
            <Grid>
               <Border Panel.ZIndex="0" Visibility="{Binding IsGenresZoomVisible,Converter={StaticResource InvertingBooleanToCollapsedConverter}}">
                  <dc:MultiSelectListBox x:Name="ListBoxGenres"
                                                       VirtualizingStackPanel.IsVirtualizing="True"
                                                       VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                       VirtualizingStackPanel.VirtualizationMode="Recycling"    
                                                       Style="{StaticResource ListBoxGenres}"
                                                       ItemsSource="{Binding GenresCvs.View,IsAsync=True}"
                                                       BorderThickness="0" 
                                                       MouseDoubleClick="ListBoxGenres_MouseDoubleClick" 
                                                       PreviewKeyDown="ListBoxGenres_PreviewKeyDown"
                                                       SelectionMode="Extended">
                     <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                           <i:InvokeCommandAction Command="{Binding SelectedGenresCommand}" CommandParameter="{Binding Path=SelectedItems,ElementName=ListBoxGenres}"/>
                        </i:EventTrigger>
                     </i:Interaction.Triggers>
                  </dc:MultiSelectListBox>
               </Border>
               <Border 
                            Panel.ZIndex="1" 
                            Visibility="{Binding IsGenresZoomVisible,Converter={StaticResource BooleanToCollapsedConverter}}" 
                            MaxWidth="300" 
                            MaxHeight="600">
                  <Border 
                                Opacity="0"
                                Panel.ZIndex="1"
                                Background="#00000000"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch">
                     <Border.Style>
                        <Style>
                           <Style.Triggers>
                              <DataTrigger Binding="{Binding IsGenresZoomVisible}" Value="True">
                                 <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard ="{StaticResource ShowSemanticZoom}"/>
                                 </DataTrigger.EnterActions>
                                 <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard ="{StaticResource HideSemanticZoom}"/>
                                 </DataTrigger.ExitActions>
                              </DataTrigger>
                           </Style.Triggers>
                        </Style>
                     </Border.Style>
                     <ListBox 
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         Style="{StaticResource ListBoxSemanticZoom}"
                                         ItemsSource="{Binding GenresZoomSelectors,IsAsync=True}"/>
                  </Border>
               </Border>
            </Grid>
         </DockPanel>
      </dc:MultiPanePanel.LeftPaneContent>
      <dc:MultiPanePanel.MiddlePaneContent>
         <DockPanel>
            <StackPanel DockPanel.Dock="Top" Margin="5,0,5,15" Orientation="Horizontal">
               <Button x:Name="AlbumsButton" Margin="12,0,0,0" ToolTip="{DynamicResource Language_All_Albums}" Style="{StaticResource TransparentButton}" Click="AlbumsButton_Click">
                  <dc:LabelToLower Content="{DynamicResource Language_Albums}" 
                                                 Foreground="{DynamicResource RG_ForegroundBrush}"
                                                 FontWeight="Light"
                                                 FontSize="20"
                                                 Padding="0"/>
               </Button>
               <Label Content="{Binding AlbumsCount}" Style="{StaticResource CountLabel}"/>
               <Button Content="{Binding AlbumOrderText,Converter={StaticResource StringToLowerConverter}}" 
                                Style="{StaticResource TransparentButton}"
                                FontWeight="Light" 
                                FontSize="20" 
                                Margin="10,0,0,0"
                                Foreground="{DynamicResource RG_InactiveForegroundBrush}"
                                Command="{Binding ToggleAlbumOrderCommand}"/>
            </StackPanel>
            <dc:MultiSelectListBox x:Name="ListBoxAlbums"
                                                                 Style="{StaticResource ListBoxAlbums}"
                                                                 ItemsSource="{Binding AlbumsCvs.View,IsAsync=True}"
                                                                 BorderThickness="0"
                                                                 MouseDoubleClick="ListBoxAlbums_MouseDoubleClick"
                                                                 PreviewKeyDown="ListBoxAlbums_PreviewKeyDown"
                                                                 SelectionMode="Extended"
                                                                 HorizontalAlignment="Left" 
                                                                 VerticalAlignment="Top">
               <i:Interaction.Triggers>
                  <i:EventTrigger EventName="SelectionChanged">
                     <i:InvokeCommandAction Command="{Binding SelectedAlbumsCommand}" CommandParameter="{Binding Path=SelectedItems,ElementName=ListBoxAlbums}"/>
                  </i:EventTrigger>
                  <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                     <i:InvokeCommandAction Command="{Binding DelaySelectedAlbumsCommand}"/>
                  </i:EventTrigger>
               </i:Interaction.Triggers>
            </dc:MultiSelectListBox>
         </DockPanel>
      </dc:MultiPanePanel.MiddlePaneContent>
      <dc:MultiPanePanel.RightPaneContent>
         <DockPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5,0,0,15">
               <dc:LabelToLower Content="{DynamicResource Language_Songs}" 
                                                 Foreground="{DynamicResource RG_ForegroundBrush}"
                                                 FontWeight="Light"
                                                 FontSize="20"
                                                 Padding="0"
                                                 Margin="10,0,0,0"/>
               <Label Content="{Binding TracksCount}" Style="{StaticResource CountLabel}"/>
               <Button Content="{Binding TrackOrderText,Converter={StaticResource StringToLowerConverter}}" 
                                Style="{StaticResource TransparentButton}"
                                FontWeight="Light" 
                                FontSize="20" 
                                Margin="10,0,0,0"
                                Foreground="{DynamicResource RG_InactiveForegroundBrush}"
                                Command="{Binding ToggleTrackOrderCommand}"/>
            </StackPanel>
            <DockPanel>
               <controls:TotalsInformation
                                DockPanel.Dock="Bottom"
                                Margin="15,15,15,0" 
                                Foreground="{DynamicResource RG_InactiveForegroundBrush}" 
                                FontSize="13"
                                TotalDurationInformation="{Binding TotalDurationInformation}"
                                TotalSizeInformation="{Binding TotalSizeInformation}"/>
               <dc:MultiSelectListBox x:Name="ListBoxTracks"
                                                             VirtualizingStackPanel.IsVirtualizing="True"
                                                             VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                             VirtualizingStackPanel.VirtualizationMode="Recycling"                       
                                                             Style="{StaticResource ListBoxTracks}"
                                                             ItemsSource="{Binding TracksCvs.View,IsAsync=True}"
                                                             MouseDoubleClick="ListBoxTracks_MouseDoubleClick"
                                                             PreviewKeyDown="ListBoxTracks_PreviewKeyDown"
                                                             KeyUp="ListBoxTracks_KeyUp" 
                                                             BorderThickness="0"
                                                             SelectionMode="Extended">
                  <dc:MultiSelectListBox.InputBindings>
                     <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracksCommand}" />
                  </dc:MultiSelectListBox.InputBindings>
                  <dc:MultiSelectListBox.GroupStyle>
                     <GroupStyle ContainerStyle="{StaticResource TracksHeader}" />
                  </dc:MultiSelectListBox.GroupStyle>
                  <i:Interaction.Triggers>
                     <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectedTracksCommand}" CommandParameter="{Binding Path=SelectedItems,ElementName=ListBoxTracks}"/>
                     </i:EventTrigger>
                  </i:Interaction.Triggers>
               </dc:MultiSelectListBox>
            </DockPanel>
         </DockPanel>
      </dc:MultiPanePanel.RightPaneContent>
   </dc:MultiPanePanel>
</baseviews:TracksViewBase>
